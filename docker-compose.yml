version: '3.8'

services:

  # DB
  mysql:
    restart: always
    container_name: mysql-db
    build: 
      context: ./backend/docker/MySQL
      dockerfile: Dockerfile
    ports:
      - "3306:3306"
    networks:
      network_bridge:
        ipv4_address: 172.24.0.2

  #  redis-chat
  redis-chat:
    restart: always
    container_name: redis-chat-cache
    build: 
      context: ./backend/docker/redis-chat
      dockerfile: Dockerfile
    ports:
      - "6379:6379"
    networks:
      network_bridge:
        ipv4_address: 172.24.0.3
      

  # spring-boot app
  backend:
    restart: always
    container_name: backend-app
    build: 
      context: ./backend/
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql-db:3306/mydb

    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis-chat
    networks:
      network_bridge:
        ipv4_address: 172.24.0.4
  
  # react app
  frontend:
    restart: always
    container_name: frontend-app
    build: 
      context: ./frontend/
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    # depends_on:
    #   - backend
    networks:
      network_bridge:
        ipv4_address: 172.24.0.5
      
networks:
  network_bridge:
      ipam:
        config:
          - subnet: 172.24.0.0/16
